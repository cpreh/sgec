#ifndef SGEC_INPUT_KEY_CODE_H_INCLUDED
#define SGEC_INPUT_KEY_CODE_H_INCLUDED

#include <sgec/detail/footer.h>
#include <sgec/detail/header.h>


SGEC_DETAIL_HEADER

enum sgec_input_key_code
{
	sgec_input_key_code_escape,
	sgec_input_key_code_return,
	sgec_input_key_code_left_shift,
	sgec_input_key_code_right_shift,
	sgec_input_key_code_tab,
	sgec_input_key_code_backspace,
	sgec_input_key_code_left_control,
	sgec_input_key_code_right_control,
	sgec_input_key_code_left_alt,
	sgec_input_key_code_right_alt,
	sgec_input_key_code_space,
	sgec_input_key_code_capital,
	sgec_input_key_code_insert,
	sgec_input_key_code_home,
	sgec_input_key_code_pageup,
	sgec_input_key_code_delete,
	sgec_input_key_code_end,
	sgec_input_key_code_pagedown,
	sgec_input_key_code_left,
	sgec_input_key_code_right,
	sgec_input_key_code_up,
	sgec_input_key_code_down,
	sgec_input_key_code_a,
	sgec_input_key_code_b,
	sgec_input_key_code_c,
	sgec_input_key_code_d,
	sgec_input_key_code_e,
	sgec_input_key_code_f,
	sgec_input_key_code_g,
	sgec_input_key_code_h,
	sgec_input_key_code_i,
	sgec_input_key_code_j,
	sgec_input_key_code_k,
	sgec_input_key_code_l,
	sgec_input_key_code_m,
	sgec_input_key_code_n,
	sgec_input_key_code_o,
	sgec_input_key_code_p,
	sgec_input_key_code_q,
	sgec_input_key_code_r,
	sgec_input_key_code_s,
	sgec_input_key_code_t,
	sgec_input_key_code_u,
	sgec_input_key_code_v,
	sgec_input_key_code_w,
	sgec_input_key_code_x,
	sgec_input_key_code_y,
	sgec_input_key_code_z,
	sgec_input_key_code_0,
	sgec_input_key_code_1,
	sgec_input_key_code_2,
	sgec_input_key_code_3,
	sgec_input_key_code_4,
	sgec_input_key_code_5,
	sgec_input_key_code_6,
	sgec_input_key_code_7,
	sgec_input_key_code_8,
	sgec_input_key_code_9,
	sgec_input_key_code_f1,
	sgec_input_key_code_f2,
	sgec_input_key_code_f3,
	sgec_input_key_code_f4,
	sgec_input_key_code_f5,
	sgec_input_key_code_f6,
	sgec_input_key_code_f7,
	sgec_input_key_code_f8,
	sgec_input_key_code_f9,
	sgec_input_key_code_f10,
	sgec_input_key_code_f11,
	sgec_input_key_code_f12,
	sgec_input_key_code_f13,
	sgec_input_key_code_f14,
	sgec_input_key_code_f15,
	sgec_input_key_code_comma,
	sgec_input_key_code_colon,
	sgec_input_key_code_decimal,
	sgec_input_key_code_apostrophe,
	sgec_input_key_code_backslash,
	sgec_input_key_code_grave,
	sgec_input_key_code_subtract,
	sgec_input_key_code_left_bracket,
	sgec_input_key_code_right_bracket,
	sgec_input_key_code_semicolon,
	sgec_input_key_code_slash,
	sgec_input_key_code_underline,
	sgec_input_key_code_scroll,
	sgec_input_key_code_pause,
	sgec_input_key_code_left_win,
	sgec_input_key_code_right_win,
	sgec_input_key_code_num_0,
	sgec_input_key_code_num_1,
	sgec_input_key_code_num_2,
	sgec_input_key_code_num_3,
	sgec_input_key_code_num_4,
	sgec_input_key_code_num_5,
	sgec_input_key_code_num_6,
	sgec_input_key_code_num_7,
	sgec_input_key_code_num_8,
	sgec_input_key_code_num_9,
	sgec_input_key_code_num_comma,
	sgec_input_key_code_num_enter,
	sgec_input_key_code_num_equals,
	sgec_input_key_code_num_lock,
	sgec_input_key_code_add,
	sgec_input_key_code_minus,
	sgec_input_key_code_multiply,
	sgec_input_key_code_divide,
	sgec_input_key_code_apps,
	sgec_input_key_code_circumflex,
	sgec_input_key_code_at,
	sgec_input_key_code_ax,
	sgec_input_key_code_equals,
	sgec_input_key_code_kana,
	sgec_input_key_code_kanji,
	sgec_input_key_code_convert,
	sgec_input_key_code_noconvert,
	sgec_input_key_code_period,
	sgec_input_key_code_power,
	sgec_input_key_code_sleep,
	sgec_input_key_code_stop,
	sgec_input_key_code_sysrq,
	sgec_input_key_code_print = sgec_input_key_code_sysrq,
	sgec_input_key_code_unlabeled,
	sgec_input_key_code_yen,
	sgec_input_key_code_unknown
};

SGEC_DETAIL_FOOTER

#endif
