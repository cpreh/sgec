set(
	SGEC_FILES
	include/sgec/detail/footer.h
	include/sgec/detail/header.h
	include/sgec/font/draw/simple.h
	include/sgec/font/object.h
	include/sgec/font/object_fwd.h
	include/sgec/font/system.h
	include/sgec/font/system_fwd.h
	include/sgec/font/unit.h
	include/sgec/image/color/make_rgba.h
	include/sgec/image/color/rgba.h
	include/sgec/image/color/rgba_channel.h
	include/sgec/image2d/system_fwd.h
	include/sgec/input/keyboard/device.h
	include/sgec/input/keyboard/device_fwd.h
	include/sgec/input/keyboard/key_callback.h
	include/sgec/input/keyboard/key_code.h
	include/sgec/input/keyboard/key_state.h
	include/sgec/renderer/context/ffp.h
	include/sgec/renderer/context/ffp_fwd.h
	include/sgec/renderer/device/ffp.h
	include/sgec/renderer/device/ffp_fwd.h
	include/sgec/renderer/target/onscreen.h
	include/sgec/renderer/target/onscreen_fwd.h
	include/sgec/renderer/target/size.h
	include/sgec/renderer/texture/create_planar_from_path.h
	include/sgec/renderer/texture/planar.h
	include/sgec/renderer/texture/planar_fwd.h
	include/sgec/renderer/texture/size.h
	include/sgec/result.h
	include/sgec/signal/connection.h
	include/sgec/signal/connection_fwd.h
	include/sgec/sprite/draw.h
	include/sgec/sprite/object.h
	include/sgec/sprite/object_fwd.h
	include/sgec/sprite/unit.h
	include/sgec/systems/instance.h
	include/sgec/systems/instance_fwd.h
	include/sgec/texture/part.h
	include/sgec/texture/part_fwd.h
	include/sgec/texture/part_raw.h
	include/sgec/window/system.h
	include/sgec/window/system_fwd.h
	include/sgec/window/system_poll_result.h
	src/CMakeLists.txt
	src/font/draw/simple.cpp
	src/font/object.cpp
	src/font/system.cpp
	src/image/color/make_rgba.cpp
	src/impl/font/object.cpp
	src/impl/font/system.cpp
	src/impl/image/color/translate_rgba.cpp
	src/impl/image2d/system.cpp
	src/impl/input/keyboard/device.cpp
	src/impl/input/keyboard/translate_key_code.cpp
	src/impl/renderer/context/ffp.cpp
	src/impl/renderer/device/ffp.cpp
	src/impl/renderer/target/onscreen.cpp
	src/impl/renderer/texture/planar.cpp
	src/impl/signal/connection.cpp
	src/impl/systems/instance.cpp
	src/impl/texture/part.cpp
	src/impl/window/system.cpp
	src/include/sgec/impl/font/object.hpp
	src/include/sgec/impl/font/system.hpp
	src/include/sgec/impl/image/color/translate_rgba.hpp
	src/include/sgec/impl/image2d/system.hpp
	src/include/sgec/impl/input/keyboard/device.hpp
	src/include/sgec/impl/input/keyboard/translate_key_code.hpp
	src/include/sgec/impl/renderer/context/ffp.hpp
	src/include/sgec/impl/renderer/device/ffp.hpp
	src/include/sgec/impl/renderer/target/onscreen.hpp
	src/include/sgec/impl/renderer/texture/planar.hpp
	src/include/sgec/impl/signal/connection.hpp
	src/include/sgec/impl/systems/instance.hpp
	src/include/sgec/impl/texture/part.hpp
	src/include/sgec/impl/window/system.hpp
	src/input/keyboard/device.cpp
	src/renderer/context/ffp.cpp
	src/renderer/device/ffp.cpp
	src/renderer/target/onscreen.cpp
	src/renderer/texture/create_planar_from_path.cpp
	src/renderer/texture/planar.cpp
	src/signal/connection.cpp
	src/sprite/draw.cpp
	src/systems/instance.cpp
	src/texture/part.cpp
	src/texture/part_raw.cpp
	src/window/system.cpp
)

include_directories(
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

fcppt_utils_append_source_dir_and_make_groups(
	"${SGEC_FILES}"
	SGEC_FILES_ABS
)

function(
	add_sgec_library
	VARIANT
)
	if(
		"${VARIANT}"
		STREQUAL
		"STATIC"
	)
		set(
			TARGET_NAME
			sgec_static
		)
	else()
		set(
			TARGET_NAME
			sgec
		)
	endif()

	add_library(
		${TARGET_NAME}
		${VARIANT}
		${SGEC_FILES_ABS}
	)

	fcppt_utils_set_target_compiler_flags(
		${TARGET_NAME}
	)

	target_include_directories(
		${TARGET_NAME}
		INTERFACE
		${fcppt_INCLUDE_DIRS}
	)

	target_link_libraries(
		${TARGET_NAME}
		PRIVATE
		${fcppt_core_TARGET}
		${sgecore_TARGET}
		${sgefont_TARGET}
		${sgefontdraw_TARGET}
		${sgeimage_TARGET}
		${sgeimagecolor_TARGET}
		${sgeinput_TARGET}
		${sgerenderer_TARGET}
		${sgesprite_TARGET}
		${sgesystems_TARGET}
		${sgetexture_TARGET}
		${sgeviewport_TARGET}
		${sgewindow_TARGET}
	)

	install(
		TARGETS
		${TARGET_NAME}
		DESTINATION
		"${INSTALL_LIBRARY_DIR}"
	)
endfunction()

if(
	ENABLE_SHARED
)
	add_sgec_library(
		SHARED
	)
endif()

if(
	ENABLE_STATIC
)
	add_sgec_library(
		STATIC
	)
endif()

set(
	INCLUDE_DIRS
	${FCPPT_UTILS_PROJECT_SOURCE_DIR}/include
	${FCPPT_UTILS_PROJECT_BINARY_DIR}/include
)

install(
	DIRECTORY
	${INCLUDE_DIRS}
	DESTINATION
	"${INSTALL_INCLUDE_DIR}"
)
